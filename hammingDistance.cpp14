/*
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.
*/

/*  
Approach :  In order to measure the hamming distance between x and y, we can first do x XOR y operation, 
then we simply count the number of bit 1 in the result of XOR operation.
We now convert the original problem into a bit-counting problem. There are several ways to count the set bits.
*/
#include <iostream>
using namespace std;

//Simple method
int countBits1(int res){
    int ans=0;
    while(res){
        if(res & 1){
            ans++;
        }
        res=res>>1;
    }
    return ans;
}

int main()
{
    int a,b;
    cin>>a>>b;
    int res=a xor b;
    
    cout<<countBits1(res);
    
    
    return 0;
}
